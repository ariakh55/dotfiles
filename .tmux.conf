set-option -ga terminal-overrides ",xterm-256color:Tc"

#set -g default-terminal "screen-256color"
#set-option -ga terminal-override ",screen-256color:Tc"

#sane tmux config

unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

#bind-key z break-pane -d -n _hidden_pane
#bind-key Z join-pane -s $.0

bind -n M-g display-popup -E "tmux new-session -A -s scratch"

unbind '"'
unbind %

#popup
#bind C-g detach-client
#bind -n M-g display-popup -E "tmux new-session -A -s popup"
bind '"' if-shell -F '#{==:#{session_name},popup}' {
    detach-client
} {
    display-popup -E "tmux new-session -A -s popup"
}

# TMS (Tmux-sessioninzer)
bind C-o display-popup -E "tms switch"
bind C-j display-popup -E "tms"
bind C-r command-prompt -p "Rename active session: " "run-shell 'tms rename %1'"
bind C-q confirm-before -p "Kill session? (y/n)" "run-shell 'tms kill'"

#reload
bind r source-file ~/.tmux.conf

bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

setw -g mouse on

#visual
setw -g clock-mode-colour colour5
setw -g mode-style 'fg=colour1 bg=colour18 bold'

#copy and paste to xclip
bind-key C-Y run "tmux save-buffer - | xclip -i -sel clipboard > /dev/null"
#bind C-v run-shell "tmux set-buffer "$(xclip -o -sel clipboard)"; tmux paste-buffer"

#vi mode (cp and paste)
#setw -g mode-keys vi

#Session Management
bind C-S command-prompt -p "New Session: " "new-session -A -s '%%'"
bind K confirm kill-session
bind C-K confirm kill-server

#nvim-tmux-navigation
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

# decide whether we're in a Vim process
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h' 'select-pane -L'
bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j' 'select-pane -D'
bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k' 'select-pane -U'
bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l' 'select-pane -R'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'

if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -n 'C-Space' if-shell "$is_vim" 'send-keys C-Space' 'select-pane -t:.+'

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l
bind-key -T copy-mode-vi 'C-Space' select-pane -t:.+

#TMUX VIM Scroll mode
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi v send -X begin-selection
bind-key -T copy-mode-vi V send -X select-line
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'xclip -in -selection clipboard'

# plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'catppuccin/tmux'

set -g @plugin 'tmux-plugins/tmux-battery'
set -g @plugin 'tmux-plugins/tmux-cpu'
set -g @plugin 'xamut/tmux-weather'
set -g @plugin 'ariakh55/tmux-spotify'

set -g @catppuccin_flavour 'mocha' # or frappe, macchiato, mocha

set -g @catppuccin_window_right_separator "█ "
set -g @catppuccin_window_left_separator "█"
set -g @catppuccin_window_number_position "right"
set -g @catppuccin_window_middle_separator " | "

set -g @catppuccin_window_default_fill "none"
set -g @catppuccin_window_default_text "#W"

set -g @catppuccin_window_current_fill "all"
set -g @catppuccin_window_current_text "#( echo \#{pane_current_path} | sed \"s|$HOME|~|\" )"

set -g @catppuccin_status_modules_right "application spotify cpu date_time session"
set -g @catppuccin_status_left_separator "█"
set -g @catppuccin_status_right_separator "█"

set -g @catppuccin_date_time_text "%m-%d %H:%M"

run '~/.tmux/plugins/tpm/tpm'
